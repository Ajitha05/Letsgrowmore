# -*- coding: utf-8 -*-
"""Task1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1d-jX_ixBrPDSl1m5RLMDOo814SV-bADL
"""

from google.colab.patches import cv2_imshow

import cv2

image=cv2.imread("afu.jpg")

cv2_imshow(image)

img_gray = cv2.cvtColor(image,cv2.COLOR_BGR2GRAY) #original image ---> GRAY SCALE
cv2_imshow(img_gray)

img_invert=cv2.bitwise_not(img_gray) # Grayscale ------>> Negative
cv2_imshow(img_invert) # Displaying the  Negative  image

img_smooth = cv2.GaussianBlur(img_invert,(21,21),sigmaX = 0,sigmaY =0 ) #Negative ---> blur image

cv2_imshow(img_smooth)

def dodgeV2(x,y):
  return cv2.divide(x,255-y,scale=256)

final_img=dodgeV2(img_gray,img_smooth) #Dividing the grayscale image by the inverted blurry image since images are just arrays

cv2_imshow(final_img) # Displaying the  final sketch image

cv2_imshow(image)

cv2_imshow(final_img) # Displaying the original and the final sketch image